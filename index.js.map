{"version":3,"file":"index.js","sources":["../src/js/refs.js","../src/js/render-tasks.js","../src/js/local-storage-api.js","../src/js/constants.js","../src/js/handlers.js","../src/main.js"],"sourcesContent":["export const refs = {\n  taskForm: document.querySelector('#task-form'),\n  tasksList: document.querySelector('#task-list'),\n};\n\n/* export default refs; */\n","import { refs } from './refs';\n\nexport function renderTasks(tasks) {\n  const markup = tasks\n    .map(\n      ({ taskId, taskName, taskDescription }) =>\n        `<li class=\"task-list-item\">\n       <button class=\"task-list-item-btn\" data-id=\"${taskId}\">Delete</button>\n       <h3>${taskName}</h3>\n       <p>${taskDescription}</p>\n     </li>`\n    )\n    .join('\\n');\n\n  refs.tasksList.innerHTML = markup;\n}\n","export function getFromLS(key, defaultValue) {\n  const jsonData = localStorage.getItem(key);\n  try {\n    return JSON.parse(jsonData);\n  } catch {\n    defaultValue || jsonData;\n  }\n}\n\n/* function getFromLS(key) {\n  try {\n    const jsonData = localStorage.getItem(key);\n    return jsonData ? JSON.parse(jsonData) : null;\n  } catch (error) {\n    console.log('Error from LS:', error);\n  }\n} */\n\n/*   function getFromLS(key, defaultValue) {\n  const jsonData = localStorage.getItem(key);\n\n  if (jsonData === null) {\n    return defaultValue;\n  }\n\n  try {\n    return JSON.parse(jsonData);\n  } catch {\n    return defaultValue ?? jsonData;\n  }\n}\n\nЩо тут:\n\n    Якщо ключа немає → повертаємо defaultValue.\n\n    Якщо JSON валідний → парсимо і повертаємо.\n\n    Якщо JSON битий → повертаємо defaultValue (якщо він є) або сирі дані.\n    */\n\nexport function saveToLS(key, value) {\n  localStorage.setItem(key, JSON.stringify(value));\n}\n","export const STORAGE_KEYS = { TASK_LIST: 'task-list' };\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport { nanoid } from 'nanoid';\n// import { tasks } from './data';\nimport { renderTasks } from './render-tasks';\nimport { getFromLS } from './local-storage-api';\nimport { STORAGE_KEYS } from './constants';\n\nlet tasks = getFromLS(STORAGE_KEYS.TASK_LIST) || {};\n\nexport function onTaskFormSubmit(e) {\n  e.preventDefault();\n\n  const { taskName, taskDescription } = e.target.elements;\n  const taskNameValue = taskName.value.trim();\n  const taskDescriptionValue = taskDescription.value.trim();\n\n  if (!taskNameValue || !taskDescriptionValue) {\n    iziToast.error({ message: 'Fill input', position: 'topLeft' });\n    return;\n  }\n\n  const task = {\n    taskId: nanoid(),\n    taskName: taskNameValue,\n    taskDescription: taskDescriptionValue,\n  };\n\n  tasks.push(task);\n  e.target.reset();\n  //   console.log(tasks);\n\n  renderTasks(tasks);\n}\n\nexport function onDeleteTaskBtnClick(e) {\n  if (e.target.nodeName !== 'BUTTON') return;\n\n  const taskId = e.target.dataset.id;\n  tasks = tasks.filter(task => task.taskId !== taskId);\n\n  e.target.closest('li').remove();\n}\n","import { onDeleteTaskBtnClick, onTaskFormSubmit } from './js/handlers';\nimport { refs } from './js/refs';\n\n/*\n  Створи список справ.\n  На сторінці є два інпути які має вводиться назва і текст задачі.\n  Після натискання на кнопку \"Add\" завдання додається до списку #task-list.\n\n  У кожної картки має бути кнопка \"Delete\", щоб можна було\n  прибрати завдання зі списку.\n  Список із завданнями має бути доступним після перезавантаження сторінки.\n\n  Розмітка картки задачі\n  <li class=\"task-list-item\">\n      <button class=\"task-list-item-btn\">Delete</button>\n      <h3>Заголовок</h3>\n      <p>Текст</p>\n  </li>\n*/\nrefs.taskForm.addEventListener('submit', onTaskFormSubmit);\nrefs.tasksList.addEventListener('click', onDeleteTaskBtnClick);\n"],"names":["refs","renderTasks","tasks","markup","taskId","taskName","taskDescription","getFromLS","key","defaultValue","jsonData","STORAGE_KEYS","onTaskFormSubmit","e","taskNameValue","taskDescriptionValue","iziToast","task","nanoid","onDeleteTaskBtnClick"],"mappings":"6vBAAO,MAAMA,EAAO,CAClB,SAAU,SAAS,cAAc,YAAY,EAC7C,UAAW,SAAS,cAAc,YAAY,CAChD,ECDO,SAASC,EAAYC,EAAO,CACjC,MAAMC,EAASD,EACZ,IACC,CAAC,CAAE,OAAAE,EAAQ,SAAAC,EAAU,gBAAAC,CAAiB,IACpC;AAAA,qDAC6CF,CAAM;AAAA,aAC9CC,CAAQ;AAAA,YACTC,CAAe;AAAA,WAEtB,EACA,KAAK;AAAA,CAAI,EAEZN,EAAK,UAAU,UAAYG,CAC7B,CCfO,SAASI,EAAUC,EAAKC,EAAc,CAC3C,MAAMC,EAAW,aAAa,QAAQF,CAAG,EACzC,GAAI,CACF,OAAO,KAAK,MAAME,CAAQ,CAC9B,MAAU,CAEP,CACH,CCPO,MAAMC,EAAe,CAAE,UAAW,WAAa,ECQtD,IAAIT,EAAQK,EAAUI,EAAa,SAAS,GAAK,CAAA,EAE1C,SAASC,EAAiBC,EAAG,CAClCA,EAAE,eAAc,EAEhB,KAAM,CAAE,SAAAR,EAAU,gBAAAC,CAAe,EAAKO,EAAE,OAAO,SACzCC,EAAgBT,EAAS,MAAM,KAAI,EACnCU,EAAuBT,EAAgB,MAAM,KAAI,EAEvD,GAAI,CAACQ,GAAiB,CAACC,EAAsB,CAC3CC,EAAS,MAAM,CAAE,QAAS,aAAc,SAAU,SAAS,CAAE,EAC7D,MACD,CAED,MAAMC,EAAO,CACX,OAAQC,EAAQ,EAChB,SAAUJ,EACV,gBAAiBC,CACrB,EAEEb,EAAM,KAAKe,CAAI,EACfJ,EAAE,OAAO,QAGTZ,EAAYC,CAAK,CACnB,CAEO,SAASiB,EAAqBN,EAAG,CACtC,GAAIA,EAAE,OAAO,WAAa,SAAU,OAEpC,MAAMT,EAASS,EAAE,OAAO,QAAQ,GAChCX,EAAQA,EAAM,OAAOe,GAAQA,EAAK,SAAWb,CAAM,EAEnDS,EAAE,OAAO,QAAQ,IAAI,EAAE,OAAM,CAC/B,CCvBAb,EAAK,SAAS,iBAAiB,SAAUY,CAAgB,EACzDZ,EAAK,UAAU,iBAAiB,QAASmB,CAAoB"}