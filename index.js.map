{"version":3,"file":"index.js","sources":["../src/js/refs.js","../src/js/render-tasks.js","../src/js/local-storage-api.js","../src/js/constants.js","../src/js/handlers.js","../src/js/theme-switcher.js","../src/main.js"],"sourcesContent":["export const refs = {\n  taskForm: document.querySelector('#task-form'),\n  tasksList: document.querySelector('#task-list'),\n  themeToggleBtn: document.querySelector('#themeToggle'),\n};\n\n// export default refs;\n","import { refs } from './refs';\n\nexport function renderTasks(tasks) {\n  const markup = tasks\n    .map(\n      ({ taskId, taskName, taskDescription }) =>\n        `<li class=\"task-list-item\">\n       <button class=\"task-list-item-btn\" data-id=\"${taskId}\">Delete</button>\n       <h3>${taskName}</h3>\n       <p>${taskDescription}</p>\n     </li>`\n    )\n    .join('\\n');\n\n  refs.tasksList.innerHTML = markup;\n}\n","//JS Course teacher's variant:\n/* export function getFromLS(key, defaultValue) {\n  const jsonData = localStorage.getItem(key);\n  try {\n    return JSON.parse(jsonData);\n  } catch {\n    defaultValue || jsonData;\n  }\n} */\n\n//Blended teacher's variant:\n/* function getFromLS(key) {\n  try {\n    const jsonData = localStorage.getItem(key);\n    return jsonData ? JSON.parse(jsonData) : null;\n  } catch (error) {\n    console.log('Error from LS:', error);\n  }\n} */\n\n//From GPT improved-1st variant:\nexport function getFromLS(key, defaultValue) {\n  const jsonData = localStorage.getItem(key);\n\n  if (jsonData === null) {\n    return defaultValue;\n  }\n\n  try {\n    return JSON.parse(jsonData);\n  } catch {\n    return defaultValue ?? jsonData;\n  }\n}\n\n/*Що тут:\n\n    Якщо ключа немає → повертаємо defaultValue.\n\n    Якщо JSON валідний → парсимо і повертаємо.\n\n    Якщо JSON битий → повертаємо defaultValue (якщо він є) або сирі дані.\n    */\n\nexport function saveToLS(key, value) {\n  localStorage.setItem(key, JSON.stringify(value));\n}\n","export const STORAGE_KEYS = {\n  TASK_LIST: 'task-list',\n  SITE_THEME: 'site-theme-state',\n};\n\nexport const THEMES = ['theme-light', 'theme-dark'];\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport { nanoid } from 'nanoid';\nimport { renderTasks } from './render-tasks';\nimport { getFromLS, saveToLS } from './local-storage-api';\nimport { STORAGE_KEYS, THEMES } from './constants';\n\nlet tasks = getFromLS(STORAGE_KEYS.TASK_LIST) || [];\n\nexport function onTaskFormSubmit(e) {\n  e.preventDefault();\n\n  const { taskName, taskDescription } = e.target.elements;\n  const taskNameValue = taskName.value.trim();\n  const taskDescriptionValue = taskDescription.value.trim();\n\n  //Deed destructuring, without trim():\n  /* const {\n    taskName: { value: taskNameValue },\n    taskDescription: { value: taskDescriptionValue },\n  } = e.target.elements; */\n\n  if (!taskNameValue || !taskDescriptionValue) {\n    iziToast.error({ message: 'Fill input', position: 'topLeft' });\n    return;\n  }\n\n  const task = {\n    taskId: nanoid(),\n    taskName: taskNameValue,\n    taskDescription: taskDescriptionValue,\n  };\n\n  tasks.push(task);\n  saveToLS(STORAGE_KEYS.TASK_LIST, tasks);\n\n  e.target.reset();\n  //   console.log(tasks);\n\n  renderTasks(tasks);\n}\n\nexport function onDeleteTaskBtnClick(e) {\n  if (e.target.nodeName !== 'BUTTON') return;\n\n  const taskId = e.target.dataset.id;\n  tasks = tasks.filter(task => task.taskId !== taskId);\n\n  saveToLS(STORAGE_KEYS.TASK_LIST, tasks);\n  e.target.closest('li').remove();\n}\n\nexport function onThemeChangeBtnClick() {\n  const classList = document.body.classList;\n  const newTheme = classList.contains('theme-light')\n    ? 'theme-dark'\n    : 'theme-light';\n\n  classList.remove(...THEMES);\n  classList.add(newTheme);\n  saveToLS(STORAGE_KEYS.SITE_THEME, newTheme);\n\n  //   console.log(classList);\n}\n","import { STORAGE_KEYS, THEMES } from './constants';\nimport { getFromLS } from './local-storage-api';\n\nconst savedTheme = getFromLS(STORAGE_KEYS.SITE_THEME, THEMES[0]);\n\nexport function renderTheme() {\n  if (THEMES.includes(savedTheme)) {\n    const classList = document.body.classList;\n    classList.remove(...THEMES);\n    classList.add(savedTheme);\n  }\n}\n","import { refs } from './js/refs';\nimport { renderTasks } from './js/render-tasks';\n// import { tasks } from './js/data';\nimport {\n  onDeleteTaskBtnClick,\n  onTaskFormSubmit,\n  onThemeChangeBtnClick,\n} from './js/handlers';\nimport { getFromLS } from './js/local-storage-api';\nimport { STORAGE_KEYS } from './js/constants';\nimport { renderTheme } from './js/theme-switcher';\n\n/*\n  Створи список справ.\n  На сторінці є два інпути які має вводиться назва і текст задачі.\n  Після натискання на кнопку \"Add\" завдання додається до списку #task-list.\n\n  У кожної картки має бути кнопка \"Delete\", щоб можна було\n  прибрати завдання зі списку.\n  Список із завданнями має бути доступним після перезавантаження сторінки.\n\n  Розмітка картки задачі\n  <li class=\"task-list-item\">\n      <button class=\"task-list-item-btn\">Delete</button>\n      <h3>Заголовок</h3>\n      <p>Текст</p>\n  </li>\n*/\n\nrenderTheme();\nrenderTasks(getFromLS(STORAGE_KEYS.TASK_LIST, []));\n\nrefs.taskForm.addEventListener('submit', onTaskFormSubmit);\nrefs.tasksList.addEventListener('click', onDeleteTaskBtnClick);\nrefs.themeToggleBtn.addEventListener('click', onThemeChangeBtnClick);\n"],"names":["refs","renderTasks","tasks","markup","taskId","taskName","taskDescription","getFromLS","key","defaultValue","jsonData","saveToLS","value","STORAGE_KEYS","THEMES","onTaskFormSubmit","e","taskNameValue","taskDescriptionValue","iziToast","task","nanoid","onDeleteTaskBtnClick","onThemeChangeBtnClick","classList","newTheme","savedTheme","renderTheme"],"mappings":"6vBAAO,MAAMA,EAAO,CAClB,SAAU,SAAS,cAAc,YAAY,EAC7C,UAAW,SAAS,cAAc,YAAY,EAC9C,eAAgB,SAAS,cAAc,cAAc,CACvD,ECFO,SAASC,EAAYC,EAAO,CACjC,MAAMC,EAASD,EACZ,IACC,CAAC,CAAE,OAAAE,EAAQ,SAAAC,EAAU,gBAAAC,CAAiB,IACpC;AAAA,qDAC6CF,CAAM;AAAA,aAC9CC,CAAQ;AAAA,YACTC,CAAe;AAAA,WAEtB,EACA,KAAK;AAAA,CAAI,EAEZN,EAAK,UAAU,UAAYG,CAC7B,CCMO,SAASI,EAAUC,EAAKC,EAAc,CAC3C,MAAMC,EAAW,aAAa,QAAQF,CAAG,EAEzC,GAAIE,IAAa,KACf,OAAOD,EAGT,GAAI,CACF,OAAO,KAAK,MAAMC,CAAQ,CAC9B,MAAU,CACN,OAAOD,GAAgBC,CACxB,CACH,CAWO,SAASC,EAASH,EAAKI,EAAO,CACnC,aAAa,QAAQJ,EAAK,KAAK,UAAUI,CAAK,CAAC,CACjD,CC9CO,MAAMC,EAAe,CAC1B,UAAW,YACX,WAAY,kBACd,EAEaC,EAAS,CAAC,cAAe,YAAY,ECElD,IAAIZ,EAAQK,EAAUM,EAAa,SAAS,GAAK,CAAA,EAE1C,SAASE,EAAiBC,EAAG,CAClCA,EAAE,eAAc,EAEhB,KAAM,CAAE,SAAAX,EAAU,gBAAAC,CAAe,EAAKU,EAAE,OAAO,SACzCC,EAAgBZ,EAAS,MAAM,KAAI,EACnCa,EAAuBZ,EAAgB,MAAM,KAAI,EAQvD,GAAI,CAACW,GAAiB,CAACC,EAAsB,CAC3CC,EAAS,MAAM,CAAE,QAAS,aAAc,SAAU,SAAS,CAAE,EAC7D,MACD,CAED,MAAMC,EAAO,CACX,OAAQC,EAAQ,EAChB,SAAUJ,EACV,gBAAiBC,CACrB,EAEEhB,EAAM,KAAKkB,CAAI,EACfT,EAASE,EAAa,UAAWX,CAAK,EAEtCc,EAAE,OAAO,QAGTf,EAAYC,CAAK,CACnB,CAEO,SAASoB,EAAqBN,EAAG,CACtC,GAAIA,EAAE,OAAO,WAAa,SAAU,OAEpC,MAAMZ,EAASY,EAAE,OAAO,QAAQ,GAChCd,EAAQA,EAAM,OAAOkB,GAAQA,EAAK,SAAWhB,CAAM,EAEnDO,EAASE,EAAa,UAAWX,CAAK,EACtCc,EAAE,OAAO,QAAQ,IAAI,EAAE,OAAM,CAC/B,CAEO,SAASO,GAAwB,CACtC,MAAMC,EAAY,SAAS,KAAK,UAC1BC,EAAWD,EAAU,SAAS,aAAa,EAC7C,aACA,cAEJA,EAAU,OAAO,GAAGV,CAAM,EAC1BU,EAAU,IAAIC,CAAQ,EACtBd,EAASE,EAAa,WAAYY,CAAQ,CAG5C,CC5DA,MAAMC,EAAanB,EAAUM,EAAa,WAAYC,EAAO,CAAC,CAAC,EAExD,SAASa,GAAc,CAC5B,GAAIb,EAAO,SAASY,CAAU,EAAG,CAC/B,MAAMF,EAAY,SAAS,KAAK,UAChCA,EAAU,OAAO,GAAGV,CAAM,EAC1BU,EAAU,IAAIE,CAAU,CACzB,CACH,CCkBAC,IACA1B,EAAYM,EAAUM,EAAa,UAAW,CAAA,CAAE,CAAC,EAEjDb,EAAK,SAAS,iBAAiB,SAAUe,CAAgB,EACzDf,EAAK,UAAU,iBAAiB,QAASsB,CAAoB,EAC7DtB,EAAK,eAAe,iBAAiB,QAASuB,CAAqB"}